# Python Dependancies
import os
import argparse
import pandas as pd
from planning.planning_helper import session
from post_job.glycerol_stock_plate_metadata import (
    generate_collection_part_associations, generate_data_associations,
    get_part_collection_loc, get_glycerol_stock_plates
)

# This module will gather metadata from all the glycerol stock plates generated by a plan in order to upload and ship to Strateos (Transcriptic)
def main():
    ap = argparse.ArgumentParser()
    ap.add_argument("-s", "--server", default='Production', 
        help="The server that this plan will be planned in. Either Production, Nursery, or Local.")
    ap.add_argument("-p", "--plans", required=True, nargs='+', type=int, 
        help="The plan ids of the plans where the glycerol stock plates were created.")
    args = vars(ap.parse_args())

    db = session(args['server'])
    cwd_path = os.getcwd()
    for plan_id in args['plans']:
        plan_dir_path = cwd_path +'/GlycerolStockPlates/plan_{}'.format(plan_id)
        os.makedirs(plan_dir_path, exist_ok=True)
        os.chdir(plan_dir_path)
        for collection in get_glycerol_stock_plates(db, plan_id):
            filename = f'{collection.object_type.name} {collection.id} plate.csv'.replace(' ', '_')
            df = pd.DataFrame(get_part_collection_loc(collection))
            df.to_csv(filename)

if __name__ == "__main__":
    main()




